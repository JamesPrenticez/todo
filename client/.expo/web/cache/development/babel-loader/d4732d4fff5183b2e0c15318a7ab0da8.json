{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\prent\\\\Github\\\\todo\\\\client\\\\screens\\\\HomeScreen.js\",\n    _this2 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Task from \"../components/Task\";\nimport { Ionicons } from \"@expo/vector-icons\";\nexport default function HomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasksCollection = _useState2[0],\n      setTasks = _useState2[1];\n\n  useEffect(function () {\n    fetch(\"http://localhost:4000/todos/incomplete\").then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      if (res && !tasksCollection.length) {\n        setTasks(res);\n      }\n    });\n    navigation.addListener(\"didFocus\", function (payload) {\n      fetch(\"http://localhost:4000/todos/incomplete\").then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res && !tasksCollection.length) {\n          setTasks(res);\n        }\n      });\n    });\n  }, []);\n\n  var updatedTasks = function updatedTasks(todoID) {\n    var updatedCollection = tasksCollection.filter(function (task) {\n      return task._id !== todoID;\n    });\n    setTasks(updatedCollection);\n  };\n\n  var addedTask = function addedTask(todo) {\n    var newTask = {\n      todo_description: todo.todo_description,\n      todo_responsible: todo.todo_responsible,\n      todo_priority: todo.todo_priority,\n      todo_completed: todo.todo_completed\n    };\n    setTasks([].concat(_toConsumableArray(tasksCollection), [newTask]));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#605e5e\",\n      marginLeft: 20,\n      marginTop: 10,\n      marginBottom: 10,\n      fontWeight: \"900\",\n      fontSize: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"What's on the agenda?\"), React.createElement(ScrollView, {\n    style: styles.container,\n    contentContainerStyle: styles.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, tasksCollection ? tasksCollection.map(function (taskObj) {\n    return React.createElement(Task, {\n      key: taskObj._id,\n      task: taskObj,\n      updatedTasks: updatedTasks,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    });\n  }) : React.createElement(Text, {\n    style: {\n      marginTop: 10,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Tasks: None!\")));\n}\n\nHomeScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    title: \"Tasks\",\n    headerTitleStyle: {\n      color: \"black\",\n      textAlign: \"left\",\n      fontSize: 18,\n      fontWeight: \"900\"\n    },\n    headerTintColor: \"rgba(255,255,255,0.8)\",\n    headerRightContainerStyle: {\n      paddingRight: 10\n    },\n    headerRight: React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"Form\", {\n          if: function _if(addedTask) {\n            addedTask = {\n              addedTask: addedTask\n            };\n          }\n        });\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }, React.createElement(Ionicons, {\n      name: \"ios-add\",\n      size: 30,\n      color: \"black\",\n      left: 50,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: \"rgba(0,0,0,0.4)\",\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: \"center\"\n  },\n  contentContainer: {\n    paddingTop: 30\n  },\n  welcomeContainer: {\n    alignItems: \"center\",\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: \"contain\",\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: \"center\",\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: \"rgba(96,100,109, 0.8)\"\n  },\n  codeHighlightContainer: {\n    backgroundColor: \"rgba(0,0,0,0.05)\",\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: \"rgba(96,100,109, 1)\",\n    lineHeight: 24,\n    textAlign: \"center\"\n  },\n  tabBarInfoContainer: _objectSpread(_objectSpread({\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0\n  }, Platform.select({\n    ios: {\n      shadowColor: \"black\",\n      shadowOffset: {\n        width: 0,\n        height: -3\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3\n    },\n    android: {\n      elevation: 20\n    }\n  })), {}, {\n    alignItems: \"center\",\n    backgroundColor: \"#fbfbfb\",\n    paddingVertical: 20\n  }),\n  tabBarInfoText: {\n    fontSize: 17,\n    color: \"rgba(96,100,109, 1)\",\n    textAlign: \"center\"\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: \"center\"\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: \"#2e78b7\"\n  }\n});","map":{"version":3,"sources":["C:/Users/prent/Github/todo/client/screens/HomeScreen.js"],"names":["React","useState","useEffect","Task","Ionicons","HomeScreen","navigation","tasksCollection","setTasks","fetch","then","res","json","length","addListener","payload","updatedTasks","todoID","updatedCollection","filter","task","_id","addedTask","todo","newTask","todo_description","todo_responsible","todo_priority","todo_completed","styles","container","color","marginLeft","marginTop","marginBottom","fontWeight","fontSize","contentContainer","map","taskObj","navigationOptions","title","headerTitleStyle","textAlign","headerTintColor","headerRightContainerStyle","paddingRight","headerRight","navigate","if","StyleSheet","create","flex","backgroundColor","developmentModeText","lineHeight","paddingTop","welcomeContainer","alignItems","welcomeImage","width","height","resizeMode","getStartedContainer","marginHorizontal","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","borderRadius","paddingHorizontal","getStartedText","tabBarInfoContainer","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  TextInput,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View\r\n} from \"react-native\";\r\nimport Task from \"../components/Task\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nexport default function HomeScreen({ navigation }) {\r\n  const [tasksCollection, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/todos/incomplete\")\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res && !tasksCollection.length) {\r\n          setTasks(res);\r\n        }\r\n        // console.log(res);\r\n      });\r\n    //\r\n    navigation.addListener(\"didFocus\", payload => {\r\n      fetch(\"http://localhost:4000/todos/incomplete\")\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if (res && !tasksCollection.length) {\r\n            setTasks(res);\r\n          }\r\n          // console.log(res);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  const updatedTasks = todoID => {\r\n    let updatedCollection = tasksCollection.filter(task => task._id !== todoID);\r\n    setTasks(updatedCollection);\r\n  };\r\n\r\n  const addedTask = todo => {\r\n    const newTask = {\r\n      todo_description: todo.todo_description,\r\n      todo_responsible: todo.todo_responsible,\r\n      todo_priority: todo.todo_priority,\r\n      todo_completed: todo.todo_completed\r\n    };\r\n    setTasks([...tasksCollection, newTask]);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text\r\n        style={{\r\n          color: \"#605e5e\",\r\n          marginLeft: 20,\r\n          marginTop: 10,\r\n          marginBottom: 10,\r\n          fontWeight: \"900\",\r\n          fontSize: 25\r\n        }}\r\n      >\r\n        What's on the agenda?\r\n      </Text>\r\n      <ScrollView\r\n        style={styles.container}\r\n        contentContainerStyle={styles.contentContainer}\r\n      >\r\n        {tasksCollection ? (\r\n          tasksCollection.map(taskObj => {\r\n            return (\r\n              <Task\r\n                key={taskObj._id}\r\n                task={taskObj}\r\n                updatedTasks={updatedTasks}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <Text style={{ marginTop: 10, marginLeft: 20 }}>Tasks: None!</Text>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nHomeScreen.navigationOptions = ({ navigation }) => ({\r\n  title: \"Tasks\",\r\n  headerTitleStyle: {\r\n    color: \"black\",\r\n    textAlign: \"left\",\r\n    fontSize: 18,\r\n    fontWeight: \"900\"\r\n  },\r\n  headerTintColor: \"rgba(255,255,255,0.8)\",\r\n\r\n  headerRightContainerStyle: {\r\n    paddingRight: 10\r\n  },\r\n  headerRight: (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        navigation.navigate(\"Form\", {\r\n          if(addedTask) {\r\n            addedTask = { addedTask };\r\n          }\r\n        });\r\n      }}\r\n    >\r\n      <Ionicons name=\"ios-add\" size={30} color=\"black\" left={50} />\r\n    </TouchableOpacity>\r\n  )\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  developmentModeText: {\r\n    marginBottom: 20,\r\n    color: \"rgba(0,0,0,0.4)\",\r\n    fontSize: 14,\r\n    lineHeight: 19,\r\n    textAlign: \"center\"\r\n  },\r\n  contentContainer: {\r\n    paddingTop: 30\r\n  },\r\n  welcomeContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    marginBottom: 20\r\n  },\r\n  welcomeImage: {\r\n    width: 100,\r\n    height: 80,\r\n    resizeMode: \"contain\",\r\n    marginTop: 3,\r\n    marginLeft: -10\r\n  },\r\n  getStartedContainer: {\r\n    alignItems: \"center\",\r\n    marginHorizontal: 50\r\n  },\r\n  homeScreenFilename: {\r\n    marginVertical: 7\r\n  },\r\n  codeHighlightText: {\r\n    color: \"rgba(96,100,109, 0.8)\"\r\n  },\r\n  codeHighlightContainer: {\r\n    backgroundColor: \"rgba(0,0,0,0.05)\",\r\n    borderRadius: 3,\r\n    paddingHorizontal: 4\r\n  },\r\n  getStartedText: {\r\n    fontSize: 17,\r\n    color: \"rgba(96,100,109, 1)\",\r\n    lineHeight: 24,\r\n    textAlign: \"center\"\r\n  },\r\n  tabBarInfoContainer: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    ...Platform.select({\r\n      ios: {\r\n        shadowColor: \"black\",\r\n        shadowOffset: { width: 0, height: -3 },\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 3\r\n      },\r\n      android: {\r\n        elevation: 20\r\n      }\r\n    }),\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fbfbfb\",\r\n    paddingVertical: 20\r\n  },\r\n  tabBarInfoText: {\r\n    fontSize: 17,\r\n    color: \"rgba(96,100,109, 1)\",\r\n    textAlign: \"center\"\r\n  },\r\n  navigationFilename: {\r\n    marginTop: 5\r\n  },\r\n  helpContainer: {\r\n    marginTop: 15,\r\n    alignItems: \"center\"\r\n  },\r\n  helpLink: {\r\n    paddingVertical: 15\r\n  },\r\n  helpLinkText: {\r\n    fontSize: 14,\r\n    color: \"#2e78b7\"\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}