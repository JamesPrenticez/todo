{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prent\\\\Github\\\\todo\\\\client\\\\navigation\\\\MainTabNavigator.js\";\n\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { createBottomTabNavigator } from \"react-navigation-tabs\";\nimport TabBarIcon from \"../components/TabBarIcon\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport CompletedScreen from \"../screens/CompletedScreen\";\nimport TaskFormScreen from \"../screens/TaskFormScreen\";\nvar config = Platform.select({\n  web: {\n    headerMode: \"screen\"\n  },\n  default: {}\n});\nvar HomeStack = createStackNavigator({\n  Home: HomeScreen,\n  Form: TaskFormScreen\n}, config);\nHomeStack.navigationOptions = {\n  tabBarLabel: \"Incomplete\",\n  tabBarIcon: function tabBarIcon(_ref) {\n    var focused = _ref.focused;\n    return React.createElement(TabBarIcon, {\n      focused: focused,\n      name: Platform.OS === \"ios\" ? \"ios-information-circle\" + (focused ? \"\" : \"-outline\") : \"md-information-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    });\n  }\n};\nHomeStack.path = \"\";\nvar CompletedStack = createStackNavigator({\n  Completed: CompletedScreen\n}, config);\nCompletedStack.navigationOptions = {\n  tabBarLabel: \"Completed\",\n  tabBarIcon: function tabBarIcon(_ref2) {\n    var focused = _ref2.focused;\n    return React.createElement(TabBarIcon, {\n      focused: focused,\n      name: Platform.OS === \"ios\" ? \"ios-checkmark-circle-outline\" : \"md-options\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    });\n  }\n};\nCompletedStack.path = \"\";\nvar tabNavigator = createBottomTabNavigator({\n  HomeStack: HomeStack,\n  CompletedStack: CompletedStack\n});\ntabNavigator.path = \"\";\nexport default tabNavigator;","map":{"version":3,"sources":["C:/Users/prent/Github/todo/client/navigation/MainTabNavigator.js"],"names":["React","createStackNavigator","createBottomTabNavigator","TabBarIcon","HomeScreen","CompletedScreen","TaskFormScreen","config","Platform","select","web","headerMode","default","HomeStack","Home","Form","navigationOptions","tabBarLabel","tabBarIcon","focused","OS","path","CompletedStack","Completed","tabNavigator"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,wBAAT,QAAyC,uBAAzC;AAEA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,eAAP;AACA,OAAOC,cAAP;AAEA,IAAMC,MAAM,GAAGC,QAAQ,CAACC,MAAT,CAAgB;AAC7BC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,UAAU,EAAE;AAAd,GADwB;AAE7BC,EAAAA,OAAO,EAAE;AAFoB,CAAhB,CAAf;AAKA,IAAMC,SAAS,GAAGZ,oBAAoB,CACpC;AACEa,EAAAA,IAAI,EAAEV,UADR;AAEEW,EAAAA,IAAI,EAAET;AAFR,CADoC,EAKpCC,MALoC,CAAtC;AAQAM,SAAS,CAACG,iBAAV,GAA8B;AAC5BC,EAAAA,WAAW,EAAE,YADe;AAE5BC,EAAAA,UAAU,EAAE;AAAA,QAAGC,OAAH,QAAGA,OAAH;AAAA,WACV,oBAAC,UAAD;AACE,MAAA,OAAO,EAAEA,OADX;AAEE,MAAA,IAAI,EACFX,QAAQ,CAACY,EAAT,KAAgB,KAAhB,+BAC6BD,OAAO,GAAG,EAAH,GAAQ,UAD5C,IAEI,uBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA;AAFgB,CAA9B;AAcAN,SAAS,CAACQ,IAAV,GAAiB,EAAjB;AAEA,IAAMC,cAAc,GAAGrB,oBAAoB,CACzC;AACEsB,EAAAA,SAAS,EAAElB;AADb,CADyC,EAIzCE,MAJyC,CAA3C;AAOAe,cAAc,CAACN,iBAAf,GAAmC;AACjCC,EAAAA,WAAW,EAAE,WADoB;AAEjCC,EAAAA,UAAU,EAAE;AAAA,QAAGC,OAAH,SAAGA,OAAH;AAAA,WACV,oBAAC,UAAD;AACE,MAAA,OAAO,EAAEA,OADX;AAEE,MAAA,IAAI,EACFX,QAAQ,CAACY,EAAT,KAAgB,KAAhB,GAAwB,8BAAxB,GAAyD,YAH7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA;AAFqB,CAAnC;AAYAE,cAAc,CAACD,IAAf,GAAsB,EAAtB;AAEA,IAAMG,YAAY,GAAGtB,wBAAwB,CAAC;AAC5CW,EAAAA,SAAS,EAATA,SAD4C;AAG5CS,EAAAA,cAAc,EAAdA;AAH4C,CAAD,CAA7C;AAMAE,YAAY,CAACH,IAAb,GAAoB,EAApB;AAEA,eAAeG,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Platform } from \"react-native\";\r\nimport { createStackNavigator } from \"react-navigation-stack\";\r\nimport { createBottomTabNavigator } from \"react-navigation-tabs\";\r\n\r\nimport TabBarIcon from \"../components/TabBarIcon\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport CompletedScreen from \"../screens/CompletedScreen\";\r\nimport TaskFormScreen from \"../screens/TaskFormScreen\";\r\n\r\nconst config = Platform.select({\r\n  web: { headerMode: \"screen\" },\r\n  default: {}\r\n});\r\n\r\nconst HomeStack = createStackNavigator(\r\n  {\r\n    Home: HomeScreen,\r\n    Form: TaskFormScreen\r\n  },\r\n  config\r\n);\r\n\r\nHomeStack.navigationOptions = {\r\n  tabBarLabel: \"Incomplete\",\r\n  tabBarIcon: ({ focused }) => (\r\n    <TabBarIcon\r\n      focused={focused}\r\n      name={\r\n        Platform.OS === \"ios\"\r\n          ? `ios-information-circle${focused ? \"\" : \"-outline\"}`\r\n          : \"md-information-circle\"\r\n      }\r\n    />\r\n  )\r\n};\r\n\r\nHomeStack.path = \"\";\r\n\r\nconst CompletedStack = createStackNavigator(\r\n  {\r\n    Completed: CompletedScreen\r\n  },\r\n  config\r\n);\r\n\r\nCompletedStack.navigationOptions = {\r\n  tabBarLabel: \"Completed\",\r\n  tabBarIcon: ({ focused }) => (\r\n    <TabBarIcon\r\n      focused={focused}\r\n      name={\r\n        Platform.OS === \"ios\" ? \"ios-checkmark-circle-outline\" : \"md-options\"\r\n      }\r\n    />\r\n  )\r\n};\r\n\r\nCompletedStack.path = \"\";\r\n\r\nconst tabNavigator = createBottomTabNavigator({\r\n  HomeStack,\r\n  // LinksStack,\r\n  CompletedStack\r\n});\r\n\r\ntabNavigator.path = \"\";\r\n\r\nexport default tabNavigator;"]},"metadata":{},"sourceType":"module"}